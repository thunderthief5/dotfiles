#!/usr/bin/env bash

# █░█ █▀▀ █▀█ █▄▄ █▀ ▀█▀ █░░ █░█ █▀▀ ▀█▀ █░█░█ █▀▄▀█ ThunderThief
# █▀█ ██▄ █▀▄ █▄█ ▄█ ░█░ █▄▄ █▄█ █▀░ ░█░ ▀▄▀▄▀ █░▀░█ vim:fileencoding=utf-8:foldmethod=marker

### {{{ Starting HLWM
function run {
  if ! pgrep $1 ;
  then
    $@&
  fi
}

#herbstluftwm start
hc() {
    herbstclient "$@"
}

hc emit_hook reload

### }}}

### {{{ Keybindings

# remove all existing keybindings
hc keyunbind --all

# if you have a super key you will be much happier with Mod set to Mod4
#Mod=Mod1  # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier

hc keybind $Mod-Shift-e quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-q close
# hc keybind $Mod-q close

# MOVEMENTS

# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right

# moving clients to ... on single Monitor
hc keybind $Mod-Mod1-Left   shift_edge left
hc keybind $Mod-Mod1-Down   shift_edge down
hc keybind $Mod-Mod1-Up     shift_edge up
hc keybind $Mod-Mod1-Right  shift_edge right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# FRAMES
# create an empty frame at the specified direction
hc keybind $Mod-Shift-x       chain , split right  0.5 , focus right
hc keybind $Mod-Shift-v       chain , split bottom 0.5 , focus down
hc keybind $Mod-Control-j     chain , split bottom 0.5 , focus down
hc keybind $Mod-Control-k     chain , split top    0.5 , focus up
hc keybind $Mod-Control-h     chain , split left   0.5 , focus left
hc keybind $Mod-Control-l     chain , split right  0.5 , focus right

# let the current frame explode into subframes
hc keybind $Mod-z split explode
hc keybind $Mod-a split auto
# remove frame
hc keybind $Mod-r remove

# resizing frames
resizestep=0.005
hc keybind $Mod-Mod1-h       resize left  +$resizestep
hc keybind $Mod-Mod1-j       resize down  +$resizestep
hc keybind $Mod-Mod1-k       resize up    +$resizestep
hc keybind $Mod-Mod1-l       resize right +$resizestep

# TAGS or WORKSPACES

#names to display in menu
tag_names=( {1..4} )
#tag_names=("Web" "Chat" "Edit" "Meld" "Vb" "Mail" "Video" "Image" "Files" "Music")
#tag_names=("I" "II" "III" "IV" "V" "VI" "VII" "VIII" "IX" "X")

#keys to press to get to the tags
tag_keys=( {1..4} )

hc rename default "${tag_names[0]}" || true

for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    # horizontal tiling as standard
    hc set_layout horizontal
    hc set default_frame_layout 1
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" chain , move_index "$i" , use_index "$i"
    fi
done

# layouting
hc keybind $Mod-Shift-f attr clients.focus.floating toggle
hc keybind $Mod-Shift-space floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-p pseudotile toggle

hc keybind $Mod-m set_layout max
hc keybind $Mod-g set_layout grid
hc keybind $Mod-v set_layout vertical
hc keybind $Mod-x set_layout horizontal

# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal grid max    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus on ...
hc keybind $Mod-BackSpace       use_previous
hc keybind $Mod-Control-Right   use_index +1 --skip-visible
hc keybind $Mod-Control-Left    use_index -1 --skip-visible
hc keybind $Mod-Shift-Right     chain , move_index +1 , use_index +1 --skip-visible
hc keybind $Mod-Shift-Left      chain , move_index -1 , use_index -1 --skip-visible

hc keybind Control-Mod1-Left    focus left
hc keybind Control-Mod1-Up      focus up
hc keybind Control-Mod1-Right   focus right
hc keybind Control-Mod1-Down    focus down
hc keybind $Mod-Tab             use_index +1 --skip-visible
hc keybind $Mod-Shift-Tab       use_index -1 --skip-visible
hc keybind Mod1-Tab             use_index +1 --skip-visible
hc keybind Mod1-Shift-Tab       use_index -1 --skip-visible
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

### }}}

### {{{ Appearance

#reset prior to setting the theme
hc attr theme.reset 1
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1

# Attribute
hc attr theme.active.color '#6272a4'
hc attr theme.active.inner_color '#282828'
hc attr theme.active.outer_color '#1b1b1b'
hc attr theme.background_color '#1b1b1b'
hc attr theme.border_width 2
hc attr theme.floating.border_width 3
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color '#1b1b1b'
hc attr theme.inner_color '#1b1b1b'
hc attr theme.inner_width 0
hc attr theme.normal.color '#1b1b1b'
hc attr theme.urgent.color '#ff5555'
#hc attr theme.padding_top 5

# Set
hc set always_show_frame 1
hc set focus_follows_mouse 1
hc set frame_border_active_color '#1b1b1b'
hc set frame_border_normal_color '#282828'
hc set frame_bg_normal_color '#1b1b1b'
hc set frame_bg_active_color '#1b1b1b'
hc set frame_active_opacity 40
hc set frame_normal_opacity 15
hc set frame_border_width 2
hc set frame_bg_transparent 1
hc set frame_transparent_width 0
hc set frame_gap 6
hc set frame_padding 0
hc set window_gap 3
hc set mouse_recenter_gap 0
hc set smart_frame_surroundings 0
hc set smart_window_surroundings 1
hc set tree_style '╾│ ├└╼─┐'

#herbstclient --idle focus_changed | while read event; do
#  herbstclient mktemp int OPACITY chain \
#    : set_attr OPACITY 100 \
#    : and . compare tags.focus.frame_count = 1 \
#    . compare tags.focus.curframe_wcount = 0 \
#    . set_attr OPACITY 0 \
#    : substitute VAL OPACITY set frame_active_opacity VAL
#done
### }}}

### {{{ Rules

hc unrule -F

# normally focus new clients
hc rule focus=on #on,off

# prioritize empty frames on placing new windows
hc rule index=e

# changes the floating position of a window
hc rule floatplacement=smart #smart,center,none

# give focus to most common terminals
hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on

hc rule class~'URxvt' floating=on
hc rule class~'Nitrogen' floating=on
hc rule class~'Eog' floating=on
hc rule class~'Gufw.py' floating=on
hc rule class~'Tor Browser' floating=on
hc rule class~'Transmission-gtk' floating=on
hc rule class~'Popsicle' floating=on
hc rule class~'Xfce4-power-manager-settings' floating=on
hc rule class~'Xfce4-settings-manager' floating=on
hc rule class~'mpv' focus=on
hc rule class~'File Transfer*' floating=on

hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=on
#hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' manage=off
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

# unlock, just to be sure
hc unlock

#hc set_monitors 1600x900+0+0

#change your keyboard if you need it
#setxkbmap -layout be

### }}}

### {{{ Autostart applications
xsetroot -solid '#000000'

startup_lock_file=/tmp/hlwm-startup.lock
if [ ! -f $startup_lock_file ]; then
  echo "dummy" > $startup_lock_file

sxhkd -c ~/.config/herbstluftwm/sxhkdrc &
picom &
xsetroot -cursor_name left_ptr &
sleep 1 && nm-applet &
#plank &
#tint2 &
/usr/libexec/polkit-gnome-authentication-agent-1 &
/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 &
/usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1 &
~/.config/polybar/launch.sh &
ffplay -nodisp -autoexit -loglevel quiet ~/.local/share/sounds/Startup-XboxOne.mp3 &
dunst &
xfce4-power-manager &
xfsettingsd &
nitrogen --restore &
volumeicon &
xautolock -time 10 -locker blurlock -corners 00-0 &
xrdb ~/.Xresources &

fi

### }}}
